<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="authorization">
  
  <title>
    Overview
  </title>
  
  <shortdesc>
    A high-level overview of Couchbase Server's core features.
  </shortdesc>
  
  <body>
    
    <section id="key_elements_and_concepts">
      
      <title>
        Key Elements and Concepts
      </title>
      
    <p>
      The principal architectural elements of Couchbase Server can be identified as follows: 
    </p>
      <p>
        
      </p>
      
      <ul>
        <li>
          <p>
            <b>Data</b>: Couchbase Server stores <i>items</i>, each of which consists of a <i>key</i>, by which
            the item is referenced; and an associated <i>value</i>, which must be either a <i>binary</i> file
            or a <i>JSON document</i>. The maximum size for an individual item is 20MB.
          </p>
          
          <p>
          </p>
        </li>
        
        <li>
          <p>
            <b>Buckets, Memory, and Storage</b>: Items are stored in <i>Buckets</i>, which are
            logical groupings of keys and values. Bucket names are referenced
            by applications that wishes to access items they contain. Buckets are of different types: some
            are managed only in memory; others are managed both in memory and on disk.
            
          </p>
          
          <p>
          </p>
        </li>
        
        <li>
          <p>
            <b>Services and Indexes</b>: <i>Services</i> support different forms of data-access by users
            and applications: for example, the <i>Data Service</i> allows items may be retrieved by their <i>key</i>;
            while the <i>Query Service</i> allows them to be retrieved according to queries specified in the
            <i>N1QL</i> query language. Data-analysis and automated update are also supported.
          </p>
          
          <p>
            The <i>Index</i> and <i>Search</i> services provide different forms of <i>index</i>, which are used
            to enable and enhance specific forms of data querying.
          </p>
          
          <p>
          </p>
        </li>
        
        <li>
          <p>
            <b>Clusters and Availability</b>: By default, a single node running Couchbase Server is considered
            a <i>cluster</i> of one node. When additional nodes are initialized, they can be configured to 
            join an existing cluster. Services can be configured to run across multiple nodes, allowing
            the handling of specific workloads to be scaled appropriately. 
          </p>
          
          <p>
            Across the nodes of each cluster, Couchbase data is evenly distributed and replicated: nodes can
            be removed, and node-failure can be handled, without data-loss. Data can be selected for
            replication across clusters residing in different data centers, to ensure high availability.
          </p>
          
          <p>
          </p>
        </li>      

      </ul>
      
      <p>
        These elements are described in detail throughout the pages in this section.
      </p>
      
    </section>
    
  </body>
  
</topic>
