<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_tlg_jqz_bw">
  <title>Data</title>
  <shortdesc>
    Couchbase Server saves data as <i>items</i>, each of which has a <i>key</i> and a <i>value</i>.
  </shortdesc>
  
  <body>
    
    <section>
      
      <title>
        Items, Keys, and Values
      </title>
      
      <p>
        Each item consists of a key and a value. Each key is unique, within its bucket. Its value 
        can be either binary or JSON.  
      </p>
      
    </section>
    
    <section>
      <title>
        Keys
      </title>
          
        <p>
          Each value (binary or JSON) is identified by a unique key. A key may be custom-created
          (for example, at the UI of Couchbase Web Console); or it may be generated by an
          application, possibly using a counter or UUID generator.
          A key is immutable: once defined, it cannot be changed.
        </p>
      
        <p>
          Note that Couchbase Server also refers to a key as an <i>id</i>.
        </p>
      
        <p>
          Each key:
        </p>
      
          <ul>
            <li>
              Must be a UTF-8 string with no spaces. Special characters, such as <codeph>(</codeph>, <codeph>%</codeph>, 
              <codeph>/</codeph>, or <codeph>_</codeph>, are acceptable.
              <p>
                
              </p>
            </li>

            <li>
              May be no longer than 250 bytes.
              <p>
                
              </p>
            </li>
            
            <li>
              Must be unique within its bucket.
              <p>
                
              </p>
            </li>
        
          </ul>

    </section>
    
    <section>
      <title>
        Values
      </title>
      
        <p>
          The maximum size of a value is 20 MB. A value can be either:
        </p>
      
      <ul>
        <li>
          <b>Binary</b>: Any form of binary is acceptable. However, indexing and querying on
          a binary is not possible.    
          
          <p>
          </p>
          
        </li>

        <li>
          <b>JSON</b>: A JSON value, referred to as a <i>document</i>, can be parsed, indexed, and queried. 
          Each document consists of one or more <i>attributes</i>,
          each of which has its own value. An attribute's value can be a <i>basic</i> type, such 
          as number, string, or Boolean; or a <i>complex</i>, such as an embedded document, or an array. 
          An example is provided below:
          <codeph>a1</codeph> and <codeph>a2</codeph> are attributes that
          have a numeric and string value respectively, <codeph>a3</codeph> is the attribute of
          an embedded document, and <codeph>a4</codeph> is an attribute for an array of
          documents.
          
          
                    <codeblock>{  
  "a1":number,
  "a2":"string",
  "a3":{
    "b1":[ number, number, number ]
  },
  "a4":[
    { "c1":"string", "c2":number },
    { "c1":"string", "c2":number }
  ]
}</codeblock>
          
          <p>
            Note that the JSON definition is provided at 
            <xref href="https://tools.ietf.org/html/rfc7159" format="html" scope="external">RFC 7159</xref>, and at 
            <xref href="http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf" format="pdf" scope="external">ECMA 404</xref>. 
          </p>
          
          <p>
            
          </p>
        </li>
        
      </ul>

    </section>
    
  </body>
</topic>
